name: Bygg og deploy

on:
  push:
    branches:
      - master         # Push events on master branch
    paths-ignore:
      - '**.md'
      - '**.MD'
      - '.gitignore'
      - 'LICENCE'
      - 'CODEOWNERS'
      - 'dev/**'

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions/cache@v2
        with:
          path: ~/.m2/repository
          key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
      - uses: actions/setup-java@v1
        with:
          java-version: 1.11
      - name: Build & Deploy
        shell: bash
        run: |
          set -x
          echo "Building $(echo $GITHUB_SHA | cut -c1-7)"
          mvn jacoco:prepare-agent deploy -e --batch-mode --settings ./.m2/settings.xml --file pom.xml -Dchangelist= -Dsha1=-$(git log -1 --pretty='%ad' --date=format:'%Y%m%d%H%M%S')-$(echo $GITHUB_SHA | cut -c1-7) -Djacoco.destFile=$(pwd)/target/jacoco.exec
          mvn jacoco:report sonar:sonar -e --batch-mode --settings ./.m2/settings.xml --file pom.xml -Djacoco.dataFile=$(pwd)/target/jacoco.exec -Dsonar.projectKey="navikt_fp-felles" -Dsonar.host.url='https://sonarcloud.io' -Dsonar.organization=navit -Dsonar.login=${SONAR_TOKEN} -Dsonar.exclusions="**/testutilities/**/*,**/pom.xml,**/src/test/**/*"
          echo "MVN_VERSION=$(mvn help:evaluate --batch-mode --settings ./.m2/settings.xml --file .flattened -Dexpression=project.version -q -DforceStdout)" >> $GITHUB_ENV
          echo "Deployed artifacts"
        env:
          GITHUB_USERNAME: x-access-token
          GITHUB_PASSWORD: ${{ secrets.GITHUB_ACCESS_TOKEN }}
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}

      - name: Set changelog
        # (Escape newlines see https://github.com/actions/create-release/issues/25)
        run: |
          text="$(git --no-pager log $(git describe --tags --abbrev=0)..HEAD --pretty=format:"%h %s")"
          text="${text//$'%'/%25}"
          text="${text//$'\n'/%0A}"
          text="${text//$'\r'/%0D}"
          echo "CHANGELOG=$text" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ env.MVN_VERSION }}
          release_name: Release ${{ env.MVN_VERSION }}
          draft: false
          prerelease: false
          body: |
            Changes in this Release
            ${{ env.CHANGELOG }}

